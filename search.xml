<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo主题安装及站点配置]]></title>
    <url>%2F2017%2F06%2F13%2Fhexo%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%8F%8A%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[--- title: hexo主题安装及站点配置 date: 2017-06-13 11:14:44 updated: 2017-06-12 11:14:44 tags: hexo categories: How_To_Build_A_Blog ---]]></content>
      <categories>
        <category>How_To_Build_A_Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo进阶功能配置(1)]]></title>
    <url>%2F2017%2F06%2F12%2Fhexo%E8%BF%9B%E9%98%B6%E5%8A%9F%E8%83%BD%E9%85%8D%E7%BD%AE(1)%2F</url>
    <content type="text"><![CDATA[--- title: hexo进阶功能配置(1) date: 2017-06-12 11:45:29 updated: 2017-06-12 12:45:29 tags: - hexo - JavaScript categories: How_To_Build_A_Blog --- 添加每篇文章的更新时间显示功能 使用七牛云存储建立博客图床 添加RSS 添加sitemap 腾讯公益404界面 # 添加文章的更新时间 ## 修改主题代码 关于文章创建时间的主题代码，在`hexo\themes\next\layout\_macro\post.swig`文件中,在 ` `标签结尾前添加以下代码： ``` {%if post.updated and post.updated > post.date%} &nbsp; | &nbsp; {{ __('post.updated') }} {{ date(post.updated, config.date_format) }} {% endif %} ``` post-updated用来访问对应的语言配置文件里的值， theme.来访问主题配置文件的变量， post.来访问每篇文章的前置设置(Front Matter)里的变量。 代码里需要保证updated的时间是date之后才会显示。 ## 修改语言配置文件 在`hexo\themes\next\languages\zh-Hans.yml`文件中添加一行： ``` post: updated: 更新于 ``` ## 修改主题配置文件 `hexo\themes\next\_config.yml`添加一行： ``` display_updated: true ``` ## 文章中添加修改日期 在文章的开头添加 ``` updated: 2017-06-12 11:45:29 ``` 然后hexo g 更新后即可查看效果。 # 使用七牛云存储建立博客图床 图床是一个保存图片的云服务器，它可以保证图片链接的稳定和一致性，提高图片加载速度。 本文参考链接：[知乎-艾豆儿的回答](https://www.zhihu.com/question/19637157/answer/136380837) ## 注册登录 我们选择的云服务器是[七牛](https://portal.qiniu.com/signin)，点击链接注册并登陆。 ## 创建存储空间 登陆后创建一个对象存储空间，即相册。 ![create_a_space](http://ora3eksx9.bkt.clouddn.com/170609create_a_space_7niu.png) 创建时要注意空间命名格式。访问控制默认为公开空间。 ![create_a_space2](http://ora3eksx9.bkt.clouddn.com/170609create_a_space2_7niu.png) 创建完成后，需要记录下一下三个信息：该存储空间的图片URL前缀、AccessKey和SecretKey URL前缀在存储空间的空间概览界面即可查看到： ![get_url](http://ora3eksx9.bkt.clouddn.com/170609create_a_space4_name.png) AccessKey和SecretKey在个人空间的秘钥管理中查询： ![get_keys](http://ora3eksx9.bkt.clouddn.com/170609create_a_space3_key.png) ## 配置chrome扩展程序 [qiniu upload files](https://chrome.google.com/webstore/detail/qiniu-upload-files/emmfkgdgapbjphdolealbojmcmnphdcc?utm_source=chrome-app-launcher-info-dialog) 该扩展程序可以快速获取图片列表及图片链接 安装完成后根据提示填写刚才获取到的url前缀、AccessKey和SecretKey ![chrome&qiniu](http://ora3eksx9.bkt.clouddn.com/170609upload_with_chrome.png) ## 图片上传及图片链接获取 设置完成后，可以在存储空间界面的内容管理中上传图片文件。使用chrome扩展程序快速获取到图片url链接。 # 添加RSS 安装插件：[hexo-generator-feed](https://github.com/hexojs/hexo-generator-feed) ``` $ npm install hexo-generator-feed –-save ``` 修改主题配置文件`_config.yml`，添加内容 ``` feed: type: atom path: atom.xml limit: 20 ``` # 添加sitemap 添加Sitemap主要是为了避免搜索引擎的爬虫没有完整的收录整个网页的内容，以便搜索引擎可以更加智能地抓取网站。 ``` $ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save #this is for baidu ``` 修改主题配置文件`_config.yml`，添加内容 ``` sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xml ``` # 腾讯公益404界面 在`hexo\source\` 目录下创建404.html，嵌入以下代码，并以utf-8的格式保存即可。 ``` 404 ```]]></content>
      <categories>
        <category>How_To_Build_A_Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用hexo&Github搭建个人博客]]></title>
    <url>%2F2017%2F06%2F09%2F%E4%BD%BF%E7%94%A8hexo%26Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[--- title: 使用hexo&Github搭建个人博客 date: 2017-06-09 15:47:16 updated: 2017-06-11 12:12:12 tags: - hexo - Github categories: How_To_Build_A_Blog --- 第一次搭建博客，用了两天的时间，还有很多待添加的功能，但基本框架已经完成了。 # 环境搭建 ## 安装配置github，设置ssh公钥 [GitHub Windows下载](https://github.com/waylau/git-for-win) 配置github环境变量，设置ssh公钥请参考此文：[windows系统下git安装和配置](http://www.brafox.com/post/2015/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/git-%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE.html) ## 安装Node.JS hexo本质上是一个Node.JS模块，所以需要先安装[Node.JS](https://nodejs.org/en/) ## 安装hexo 安装完github后，桌面上会出现Git Shell，打开后输入npm命令就可以安装 ``` $ npm install hexo-cli -g $ npm install hexo --save ``` hexo网址：https://hexo.io/zh-cn/index.html # hexo配置 Hexo 3.0 把服务器独立成了个别模块，我们必须得在站点文件夹根目录下安装之后才能使用。 根据习惯选择安装路径（例如d:\hexo\），打开命令行窗口，切换至刚选择的配置路径，输入一下命令进行初始化 ``` $ hexo init ``` 或 ``` $ hexo init $ cd $ npm install ``` ## 安装hexo插件 初始化完成后需要安装以下hexo插件，直接复制该段命令至命令行窗口即可自动安装。 ``` npm install hexo-generator-index --save npm install hexo-generator-archive --save npm install hexo-generator-category --save npm install hexo-generator-tag --save npm install hexo-server --save npm install hexo-deployer-git --save npm install hexo-deployer-heroku --save npm install hexo-deployer-rsync --save npm install hexo-deployer-openshift --save npm install hexo-renderer-marked@0.2 --save npm install hexo-renderer-stylus@0.2 --save npm install hexo-generator-feed@1 --save npm install hexo-generator-sitemap@1 --save ``` 此时hexo已经部署完成，可以使用`hexo server`‌命令打开服务器，并在浏览器中输入`http://localhost:4000/`来查看hexo生成的网页文件。 ![hexo_hello_world](http://ora3eksx9.bkt.clouddn.com/170609hexo_hello_world.png) # 部署至Github ## 1.申请github账号，创建仓库 具体请参考：[官方文档](https://guides.github.com/activities/hello-world/) ## 2.将安装github时生成的ssh密钥添加至github仓库 密钥保存在.ssh目录的id_rsa.pub文件中，.ssh目录一般在C:\Users\(计算机用户名)\.ssh目录下。 ![add_deploy_key.png](http://ora3eksx9.bkt.clouddn.com/170609add_deploy_key.png) **注意：**在添加时要勾选允许写入操作(allow write access)的选项 ## 3.测试连接 回到git shell，执行: ``` $ ssh -T git@github.com ``` 出现提示后，输入yes，如果需要输入密码，则输入在设置ssh时自己设定的密码。 当提示：`Hi, 用户名/用户名.github.io! You've successfully authenticated, but GitHub does notprovide shell access.`证明连接成功。  ## 4.配置_config.yml文件 在hexo目录下，有一个名为`_config.yml`的文件，使用记事本打开，做如下修改并保存。 ``` deploy: type: git //改成git repository: https://github.com/用户名/用户名.github.io //改成自己的用户名 branch: master ``` ## 5.发布博客 回到git shell,执行如下命令： ``` $ hexo generate $ hexo deploy ``` 如果报错：`Error: Deployer not found : github`，则再执行一次 `npm install hexo-deployer-git --save` 即可。 命令成功后，访问`http://用户名.github.io/`即可查看自己的博客网页。 **注意：** 每次执行hexo 相关的命令时，都要在hexo的目录下执行。 每次修改本地文件过后，都要使用以下命令更新Github中的文件： ``` $ hexo clean $ hexo generate $ hexo deploy ``` 后两句命令可缩写为 ``` $ hexo d -g ``` 至此博客已经搭建完成，但接下来还有更多的事情要做：hexo主题编辑、博文撰写、域名购买及功能扩充等内容，且听下回分解~ 博客搭建过程中参考了以下文章，对作者致以感谢： [手把手教你使用Hexo + Github Pages搭建个人独立博客](https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/) [史上最详细的Hexo博客搭建图文教程](https://xuanwo.org/2015/03/26/hexo-intor/) [使用hexo搭建github.io博客](http://www.cnblogs.com/liulangmao/p/4323064.html)]]></content>
      <categories>
        <category>How_To_Build_A_Blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown入门]]></title>
    <url>%2F2017%2F06%2F08%2Fmarkdown%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[--- title: markdown入门 date: 2017-06-08 15:27:28 updated: 2017-06-08 15:27:28 tags: Markdown categories: How_To_Build_A_Blog --- markdown为一种轻量级标记语言，它使用纯文本格式编写文档，然后转换成有效的HTML文档，特别适合用于博文的撰写。 本文只记录了一些常用的基本内容 # 更多markdown语法请参考：[Markdown简明语法手册](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown) # 文章摘要 在摘要文字后使用`` # 标题 ``` bash # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 ``` # 列表 ``` bash 无序： - 有序： 1. 2. 3. ``` # 链接和图片 链接格式： `[文本](链接地址)` 图片格式： `![文本](图片地址)` 显示连接中带括号的图片： ``` ![][1] [1]: http://latex.codecogs.com/gif.latex?\prod%20\(n_{i}\)+1 ``` 例子：[简书](http://www.jianshu.com) # 引用 `> 引用内容` # 字体 `**加粗字体**` `*斜体*` # 代码引用 ``` bash 单行代码：`` 多行代码 ``` ``` # 表格 ``` | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | ``` 收工~]]></content>
      <categories>
        <category>How_To_Build_A_Blog</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试专用]]></title>
    <url>%2F2017%2F06%2F08%2F%E6%B5%8B%E8%AF%95%E4%B8%93%E7%94%A8%2F</url>
    <content type="text"><![CDATA[--- title: 测试专用 date: 2017-06-08 12:12:12 updated: 2017-06-11 12:12:12 tags: categories: 瞎折腾 --- # updated 170611 现在博客的基本功能已经实现的差不多了，还差评论、搜索和关于界面待完善。下一步打算先丰富博客的内容，并把其他平台的一些文字搬运过来，然后再考虑功能完善的问题。 从刚接触网络到现在也有十多年的时间了，文字、资料杂七杂八的散落在各种平台上：QQ空间、贴吧、论坛、微博、Lofter、为知笔记、印象笔记…… 一直想找个机会整理一下，但一直没能找到一个好的收纳地点，希望这个博客能够成为它们旅行的重点。 待搬运：读书笔记、python学习笔记 ~~~~~~ updated 170509 ~~~~~~ 测试网易云音乐的播放器：]]></content>
      <categories>
        <category>瞎折腾</category>
      </categories>
  </entry>
</search>